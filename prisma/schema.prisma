// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id
  email     String   @unique
  name      String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // NextAuth
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // App data
  notes Note[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Note {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  
  // Transcription job tracking (for voice notes)
  transcriptionJobId     String?
  transcriptionStatus    String? // 'IN_PROGRESS', 'COMPLETED', 'FAILED'
  transcriptionS3Key     String?
  transcriptionConfidence Float?
  isProcessing           Boolean @default(false)
  
  // AI Summary fields
  summary                String?
  summaryGeneratedAt     DateTime?
  summaryTokensUsed      Int?
  keyPoints              String? // JSON array of key points
  hasSummary             Boolean @default(false)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags NoteTags[]

  @@map("notes")
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  color String @default("#3B82F6")
  
  notes NoteTags[]

  @@map("tags")
}

model NoteTags {
  noteId String
  tagId  String
  
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([noteId, tagId])
  @@map("note_tags")
} 